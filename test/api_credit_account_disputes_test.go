/*
Core API

Testing CreditAccountDisputesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/torpago/mqt-client"
)

func Test_openapi_CreditAccountDisputesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CreditAccountDisputesAPIService CreateDisputeForAccount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountToken string

		resp, httpRes, err := apiClient.CreditAccountDisputesAPI.CreateDisputeForAccount(context.Background(), accountToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditAccountDisputesAPIService GetDisputesByAccount", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountToken string

		resp, httpRes, err := apiClient.CreditAccountDisputesAPI.GetDisputesByAccount(context.Background(), accountToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditAccountDisputesAPIService RetrieveDispute", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountToken string
		var disputeToken string

		resp, httpRes, err := apiClient.CreditAccountDisputesAPI.RetrieveDispute(context.Background(), accountToken, disputeToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CreditAccountDisputesAPIService TransitionDispute", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var accountToken string
		var disputeToken string

		resp, httpRes, err := apiClient.CreditAccountDisputesAPI.TransitionDispute(context.Background(), accountToken, disputeToken).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
