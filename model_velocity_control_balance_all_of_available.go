/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VelocityControlBalanceAllOfAvailable type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VelocityControlBalanceAllOfAvailable{}

// VelocityControlBalanceAllOfAvailable struct for VelocityControlBalanceAllOfAvailable
type VelocityControlBalanceAllOfAvailable struct {
	// Amount of money remaining for the user. This value is returned only if the user has a limit on the amount of money.
	Amount *float32 `json:"amount,omitempty"`
	// Number of days remaining for the user. This value is returned only if the user has a limit on the number of days.
	DaysRemaining *int32 `json:"days_remaining,omitempty"`
	// Number of uses remaining for the user. This value is returned only if the user has a limit on the number of uses.
	Uses *int32 `json:"uses,omitempty"`
}

// NewVelocityControlBalanceAllOfAvailable instantiates a new VelocityControlBalanceAllOfAvailable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVelocityControlBalanceAllOfAvailable() *VelocityControlBalanceAllOfAvailable {
	this := VelocityControlBalanceAllOfAvailable{}
	return &this
}

// NewVelocityControlBalanceAllOfAvailableWithDefaults instantiates a new VelocityControlBalanceAllOfAvailable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVelocityControlBalanceAllOfAvailableWithDefaults() *VelocityControlBalanceAllOfAvailable {
	this := VelocityControlBalanceAllOfAvailable{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *VelocityControlBalanceAllOfAvailable) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityControlBalanceAllOfAvailable) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *VelocityControlBalanceAllOfAvailable) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *VelocityControlBalanceAllOfAvailable) SetAmount(v float32) {
	o.Amount = &v
}

// GetDaysRemaining returns the DaysRemaining field value if set, zero value otherwise.
func (o *VelocityControlBalanceAllOfAvailable) GetDaysRemaining() int32 {
	if o == nil || IsNil(o.DaysRemaining) {
		var ret int32
		return ret
	}
	return *o.DaysRemaining
}

// GetDaysRemainingOk returns a tuple with the DaysRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityControlBalanceAllOfAvailable) GetDaysRemainingOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysRemaining) {
		return nil, false
	}
	return o.DaysRemaining, true
}

// HasDaysRemaining returns a boolean if a field has been set.
func (o *VelocityControlBalanceAllOfAvailable) HasDaysRemaining() bool {
	if o != nil && !IsNil(o.DaysRemaining) {
		return true
	}

	return false
}

// SetDaysRemaining gets a reference to the given int32 and assigns it to the DaysRemaining field.
func (o *VelocityControlBalanceAllOfAvailable) SetDaysRemaining(v int32) {
	o.DaysRemaining = &v
}

// GetUses returns the Uses field value if set, zero value otherwise.
func (o *VelocityControlBalanceAllOfAvailable) GetUses() int32 {
	if o == nil || IsNil(o.Uses) {
		var ret int32
		return ret
	}
	return *o.Uses
}

// GetUsesOk returns a tuple with the Uses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityControlBalanceAllOfAvailable) GetUsesOk() (*int32, bool) {
	if o == nil || IsNil(o.Uses) {
		return nil, false
	}
	return o.Uses, true
}

// HasUses returns a boolean if a field has been set.
func (o *VelocityControlBalanceAllOfAvailable) HasUses() bool {
	if o != nil && !IsNil(o.Uses) {
		return true
	}

	return false
}

// SetUses gets a reference to the given int32 and assigns it to the Uses field.
func (o *VelocityControlBalanceAllOfAvailable) SetUses(v int32) {
	o.Uses = &v
}

func (o VelocityControlBalanceAllOfAvailable) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VelocityControlBalanceAllOfAvailable) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.DaysRemaining) {
		toSerialize["days_remaining"] = o.DaysRemaining
	}
	if !IsNil(o.Uses) {
		toSerialize["uses"] = o.Uses
	}
	return toSerialize, nil
}

type NullableVelocityControlBalanceAllOfAvailable struct {
	value *VelocityControlBalanceAllOfAvailable
	isSet bool
}

func (v NullableVelocityControlBalanceAllOfAvailable) Get() *VelocityControlBalanceAllOfAvailable {
	return v.value
}

func (v *NullableVelocityControlBalanceAllOfAvailable) Set(val *VelocityControlBalanceAllOfAvailable) {
	v.value = val
	v.isSet = true
}

func (v NullableVelocityControlBalanceAllOfAvailable) IsSet() bool {
	return v.isSet
}

func (v *NullableVelocityControlBalanceAllOfAvailable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVelocityControlBalanceAllOfAvailable(val *VelocityControlBalanceAllOfAvailable) *NullableVelocityControlBalanceAllOfAvailable {
	return &NullableVelocityControlBalanceAllOfAvailable{value: val, isSet: true}
}

func (v NullableVelocityControlBalanceAllOfAvailable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVelocityControlBalanceAllOfAvailable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


