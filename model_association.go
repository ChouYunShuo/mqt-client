/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Association type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Association{}

// Association Defines to which the velocity control applies.
type Association struct {
	// Unique identifier of the card group.
	CardGroupToken *string `json:"card_group_token,omitempty"`
}

// NewAssociation instantiates a new Association object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociation() *Association {
	this := Association{}
	return &this
}

// NewAssociationWithDefaults instantiates a new Association object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociationWithDefaults() *Association {
	this := Association{}
	return &this
}

// GetCardGroupToken returns the CardGroupToken field value if set, zero value otherwise.
func (o *Association) GetCardGroupToken() string {
	if o == nil || IsNil(o.CardGroupToken) {
		var ret string
		return ret
	}
	return *o.CardGroupToken
}

// GetCardGroupTokenOk returns a tuple with the CardGroupToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Association) GetCardGroupTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CardGroupToken) {
		return nil, false
	}
	return o.CardGroupToken, true
}

// HasCardGroupToken returns a boolean if a field has been set.
func (o *Association) HasCardGroupToken() bool {
	if o != nil && !IsNil(o.CardGroupToken) {
		return true
	}

	return false
}

// SetCardGroupToken gets a reference to the given string and assigns it to the CardGroupToken field.
func (o *Association) SetCardGroupToken(v string) {
	o.CardGroupToken = &v
}

func (o Association) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Association) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardGroupToken) {
		toSerialize["card_group_token"] = o.CardGroupToken
	}
	return toSerialize, nil
}

type NullableAssociation struct {
	value *Association
	isSet bool
}

func (v NullableAssociation) Get() *Association {
	return v.value
}

func (v *NullableAssociation) Set(val *Association) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociation(val *Association) *NullableAssociation {
	return &NullableAssociation{value: val, isSet: true}
}

func (v NullableAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


