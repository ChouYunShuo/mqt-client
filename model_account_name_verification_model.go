/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountNameVerificationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountNameVerificationModel{}

// AccountNameVerificationModel Contains name verification data: the full name entered by the cardholder, name data held by the Marqeta platform, and an assertion by the Marqeta platform as to whether the two sets of data match.
type AccountNameVerificationModel struct {
	OnFile *AniInformation `json:"on_file,omitempty"`
	Request *AniInformation `json:"request,omitempty"`
	RequestType *string `json:"request_type,omitempty"`
	Response *Response `json:"response,omitempty"`
}

// NewAccountNameVerificationModel instantiates a new AccountNameVerificationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountNameVerificationModel() *AccountNameVerificationModel {
	this := AccountNameVerificationModel{}
	return &this
}

// NewAccountNameVerificationModelWithDefaults instantiates a new AccountNameVerificationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountNameVerificationModelWithDefaults() *AccountNameVerificationModel {
	this := AccountNameVerificationModel{}
	return &this
}

// GetOnFile returns the OnFile field value if set, zero value otherwise.
func (o *AccountNameVerificationModel) GetOnFile() AniInformation {
	if o == nil || IsNil(o.OnFile) {
		var ret AniInformation
		return ret
	}
	return *o.OnFile
}

// GetOnFileOk returns a tuple with the OnFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountNameVerificationModel) GetOnFileOk() (*AniInformation, bool) {
	if o == nil || IsNil(o.OnFile) {
		return nil, false
	}
	return o.OnFile, true
}

// HasOnFile returns a boolean if a field has been set.
func (o *AccountNameVerificationModel) HasOnFile() bool {
	if o != nil && !IsNil(o.OnFile) {
		return true
	}

	return false
}

// SetOnFile gets a reference to the given AniInformation and assigns it to the OnFile field.
func (o *AccountNameVerificationModel) SetOnFile(v AniInformation) {
	o.OnFile = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *AccountNameVerificationModel) GetRequest() AniInformation {
	if o == nil || IsNil(o.Request) {
		var ret AniInformation
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountNameVerificationModel) GetRequestOk() (*AniInformation, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *AccountNameVerificationModel) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given AniInformation and assigns it to the Request field.
func (o *AccountNameVerificationModel) SetRequest(v AniInformation) {
	o.Request = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *AccountNameVerificationModel) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountNameVerificationModel) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *AccountNameVerificationModel) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *AccountNameVerificationModel) SetRequestType(v string) {
	o.RequestType = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *AccountNameVerificationModel) GetResponse() Response {
	if o == nil || IsNil(o.Response) {
		var ret Response
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountNameVerificationModel) GetResponseOk() (*Response, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *AccountNameVerificationModel) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given Response and assigns it to the Response field.
func (o *AccountNameVerificationModel) SetResponse(v Response) {
	o.Response = &v
}

func (o AccountNameVerificationModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountNameVerificationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnFile) {
		toSerialize["on_file"] = o.OnFile
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.RequestType) {
		toSerialize["request_type"] = o.RequestType
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	return toSerialize, nil
}

type NullableAccountNameVerificationModel struct {
	value *AccountNameVerificationModel
	isSet bool
}

func (v NullableAccountNameVerificationModel) Get() *AccountNameVerificationModel {
	return v.value
}

func (v *NullableAccountNameVerificationModel) Set(val *AccountNameVerificationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountNameVerificationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountNameVerificationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountNameVerificationModel(val *AccountNameVerificationModel) *NullableAccountNameVerificationModel {
	return &NullableAccountNameVerificationModel{value: val, isSet: true}
}

func (v NullableAccountNameVerificationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountNameVerificationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


