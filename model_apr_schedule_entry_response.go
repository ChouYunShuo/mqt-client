/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AprScheduleEntryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AprScheduleEntryResponse{}

// AprScheduleEntryResponse struct for AprScheduleEntryResponse
type AprScheduleEntryResponse struct {
	// Whether the APR is ignored for the current billing cycle and applied on the next.
	ApplyNextCycle *bool `json:"apply_next_cycle,omitempty"`
	// Date and time when the APR goes into effect, in UTC.
	EffectiveDate *time.Time `json:"effective_date,omitempty"`
	// Number of percentage points added to the prime rate, used to calculate a variable value.  Used for variable values only.
	Margin *decimal.Decimal `json:"margin,omitempty"`
	// Indicates whether the APR value is fixed or variable.
	Type *string `json:"type,omitempty"`
	// Percentage value of the APR.  If the APR type is `FIXED`, this is the value of the fixed rate. If the APR type is `VARIABLE`, the value is calculated by adding the margin to the prime rate that was stored on Marqeta's credit platform when your credit program was created.  When backdating an APR, this value cannot be greater than the value of the effective APR on the backdated date.
	Value decimal.Decimal `json:"value"`
}

type _AprScheduleEntryResponse AprScheduleEntryResponse

// NewAprScheduleEntryResponse instantiates a new AprScheduleEntryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAprScheduleEntryResponse(value decimal.Decimal) *AprScheduleEntryResponse {
	this := AprScheduleEntryResponse{}
	var applyNextCycle bool = false
	this.ApplyNextCycle = &applyNextCycle
	var type_ string = "FIXED"
	this.Type = &type_
	this.Value = value
	return &this
}

// NewAprScheduleEntryResponseWithDefaults instantiates a new AprScheduleEntryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAprScheduleEntryResponseWithDefaults() *AprScheduleEntryResponse {
	this := AprScheduleEntryResponse{}
	var applyNextCycle bool = false
	this.ApplyNextCycle = &applyNextCycle
	var type_ string = "FIXED"
	this.Type = &type_
	return &this
}

// GetApplyNextCycle returns the ApplyNextCycle field value if set, zero value otherwise.
func (o *AprScheduleEntryResponse) GetApplyNextCycle() bool {
	if o == nil || IsNil(o.ApplyNextCycle) {
		var ret bool
		return ret
	}
	return *o.ApplyNextCycle
}

// GetApplyNextCycleOk returns a tuple with the ApplyNextCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleEntryResponse) GetApplyNextCycleOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyNextCycle) {
		return nil, false
	}
	return o.ApplyNextCycle, true
}

// HasApplyNextCycle returns a boolean if a field has been set.
func (o *AprScheduleEntryResponse) HasApplyNextCycle() bool {
	if o != nil && !IsNil(o.ApplyNextCycle) {
		return true
	}

	return false
}

// SetApplyNextCycle gets a reference to the given bool and assigns it to the ApplyNextCycle field.
func (o *AprScheduleEntryResponse) SetApplyNextCycle(v bool) {
	o.ApplyNextCycle = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *AprScheduleEntryResponse) GetEffectiveDate() time.Time {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleEntryResponse) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *AprScheduleEntryResponse) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given time.Time and assigns it to the EffectiveDate field.
func (o *AprScheduleEntryResponse) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *AprScheduleEntryResponse) GetMargin() decimal.Decimal {
	if o == nil || IsNil(o.Margin) {
		var ret decimal.Decimal
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleEntryResponse) GetMarginOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *AprScheduleEntryResponse) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given decimal.Decimal and assigns it to the Margin field.
func (o *AprScheduleEntryResponse) SetMargin(v decimal.Decimal) {
	o.Margin = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AprScheduleEntryResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleEntryResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AprScheduleEntryResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AprScheduleEntryResponse) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value
func (o *AprScheduleEntryResponse) GetValue() decimal.Decimal {
	if o == nil {
		var ret decimal.Decimal
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AprScheduleEntryResponse) GetValueOk() (*decimal.Decimal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AprScheduleEntryResponse) SetValue(v decimal.Decimal) {
	o.Value = v
}

func (o AprScheduleEntryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AprScheduleEntryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplyNextCycle) {
		toSerialize["apply_next_cycle"] = o.ApplyNextCycle
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effective_date"] = o.EffectiveDate
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *AprScheduleEntryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAprScheduleEntryResponse := _AprScheduleEntryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAprScheduleEntryResponse)

	if err != nil {
		return err
	}

	*o = AprScheduleEntryResponse(varAprScheduleEntryResponse)

	return err
}

type NullableAprScheduleEntryResponse struct {
	value *AprScheduleEntryResponse
	isSet bool
}

func (v NullableAprScheduleEntryResponse) Get() *AprScheduleEntryResponse {
	return v.value
}

func (v *NullableAprScheduleEntryResponse) Set(val *AprScheduleEntryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAprScheduleEntryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAprScheduleEntryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAprScheduleEntryResponse(val *AprScheduleEntryResponse) *NullableAprScheduleEntryResponse {
	return &NullableAprScheduleEntryResponse{value: val, isSet: true}
}

func (v NullableAprScheduleEntryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAprScheduleEntryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


