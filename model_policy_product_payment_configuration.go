/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PolicyProductPaymentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyProductPaymentConfiguration{}

// PolicyProductPaymentConfiguration Contains the configurations for billing cycle day, payment due day, and fees.
type PolicyProductPaymentConfiguration struct {
	// Ordered list of balance types to which payments are allocated, from first to last.
	AllocationOrder []PaymentAllocationOrderEnum `json:"allocation_order"`
	// Day of month the billing cycle starts.
	BillingCycleDay int32 `json:"billing_cycle_day"`
	// Determines if the billing cycle day is manually set or determined dynamically during account creation based on cycling logic.
	BillingCycleDayStrategy *string `json:"billing_cycle_day_strategy,omitempty"`
	// Frequency at which your account is billed.
	BillingCycleFrequency *string `json:"billing_cycle_frequency,omitempty"`
	// Day of month the payment for the previous billing cycle is due.  This field is being deprecated and replaced by `payment_due_interval` of a product policy. To retrieve `payment_due_interval`, see <</core-api/policies#retrieveProductPolicy, Retrieve credit product policy, payments.payment_due_interval>>.
	// Deprecated
	DueDay *int32 `json:"due_day,omitempty"`
	MinPaymentCalculation PolicyProductMinPaymentCalculation `json:"min_payment_calculation"`
	// Specifies the payment due interval that is used to determine the payment due date for a billing cycle. The accepted values are either -1 or a value between 1 and 26. A value of -1 indicates one day prior to the next billing cycle date
	PaymentDueInterval *int32 `json:"payment_due_interval,omitempty"`
}

type _PolicyProductPaymentConfiguration PolicyProductPaymentConfiguration

// NewPolicyProductPaymentConfiguration instantiates a new PolicyProductPaymentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyProductPaymentConfiguration(allocationOrder []PaymentAllocationOrderEnum, billingCycleDay int32, minPaymentCalculation PolicyProductMinPaymentCalculation) *PolicyProductPaymentConfiguration {
	this := PolicyProductPaymentConfiguration{}
	this.AllocationOrder = allocationOrder
	this.BillingCycleDay = billingCycleDay
	var billingCycleDayStrategy string = "MANUAL"
	this.BillingCycleDayStrategy = &billingCycleDayStrategy
	var billingCycleFrequency string = "MONTHLY"
	this.BillingCycleFrequency = &billingCycleFrequency
	this.MinPaymentCalculation = minPaymentCalculation
	var paymentDueInterval int32 = -1
	this.PaymentDueInterval = &paymentDueInterval
	return &this
}

// NewPolicyProductPaymentConfigurationWithDefaults instantiates a new PolicyProductPaymentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyProductPaymentConfigurationWithDefaults() *PolicyProductPaymentConfiguration {
	this := PolicyProductPaymentConfiguration{}
	var billingCycleDayStrategy string = "MANUAL"
	this.BillingCycleDayStrategy = &billingCycleDayStrategy
	var billingCycleFrequency string = "MONTHLY"
	this.BillingCycleFrequency = &billingCycleFrequency
	var paymentDueInterval int32 = -1
	this.PaymentDueInterval = &paymentDueInterval
	return &this
}

// GetAllocationOrder returns the AllocationOrder field value
func (o *PolicyProductPaymentConfiguration) GetAllocationOrder() []PaymentAllocationOrderEnum {
	if o == nil {
		var ret []PaymentAllocationOrderEnum
		return ret
	}

	return o.AllocationOrder
}

// GetAllocationOrderOk returns a tuple with the AllocationOrder field value
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetAllocationOrderOk() ([]PaymentAllocationOrderEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllocationOrder, true
}

// SetAllocationOrder sets field value
func (o *PolicyProductPaymentConfiguration) SetAllocationOrder(v []PaymentAllocationOrderEnum) {
	o.AllocationOrder = v
}

// GetBillingCycleDay returns the BillingCycleDay field value
func (o *PolicyProductPaymentConfiguration) GetBillingCycleDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BillingCycleDay
}

// GetBillingCycleDayOk returns a tuple with the BillingCycleDay field value
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetBillingCycleDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCycleDay, true
}

// SetBillingCycleDay sets field value
func (o *PolicyProductPaymentConfiguration) SetBillingCycleDay(v int32) {
	o.BillingCycleDay = v
}

// GetBillingCycleDayStrategy returns the BillingCycleDayStrategy field value if set, zero value otherwise.
func (o *PolicyProductPaymentConfiguration) GetBillingCycleDayStrategy() string {
	if o == nil || IsNil(o.BillingCycleDayStrategy) {
		var ret string
		return ret
	}
	return *o.BillingCycleDayStrategy
}

// GetBillingCycleDayStrategyOk returns a tuple with the BillingCycleDayStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetBillingCycleDayStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.BillingCycleDayStrategy) {
		return nil, false
	}
	return o.BillingCycleDayStrategy, true
}

// HasBillingCycleDayStrategy returns a boolean if a field has been set.
func (o *PolicyProductPaymentConfiguration) HasBillingCycleDayStrategy() bool {
	if o != nil && !IsNil(o.BillingCycleDayStrategy) {
		return true
	}

	return false
}

// SetBillingCycleDayStrategy gets a reference to the given string and assigns it to the BillingCycleDayStrategy field.
func (o *PolicyProductPaymentConfiguration) SetBillingCycleDayStrategy(v string) {
	o.BillingCycleDayStrategy = &v
}

// GetBillingCycleFrequency returns the BillingCycleFrequency field value if set, zero value otherwise.
func (o *PolicyProductPaymentConfiguration) GetBillingCycleFrequency() string {
	if o == nil || IsNil(o.BillingCycleFrequency) {
		var ret string
		return ret
	}
	return *o.BillingCycleFrequency
}

// GetBillingCycleFrequencyOk returns a tuple with the BillingCycleFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetBillingCycleFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.BillingCycleFrequency) {
		return nil, false
	}
	return o.BillingCycleFrequency, true
}

// HasBillingCycleFrequency returns a boolean if a field has been set.
func (o *PolicyProductPaymentConfiguration) HasBillingCycleFrequency() bool {
	if o != nil && !IsNil(o.BillingCycleFrequency) {
		return true
	}

	return false
}

// SetBillingCycleFrequency gets a reference to the given string and assigns it to the BillingCycleFrequency field.
func (o *PolicyProductPaymentConfiguration) SetBillingCycleFrequency(v string) {
	o.BillingCycleFrequency = &v
}

// GetDueDay returns the DueDay field value if set, zero value otherwise.
// Deprecated
func (o *PolicyProductPaymentConfiguration) GetDueDay() int32 {
	if o == nil || IsNil(o.DueDay) {
		var ret int32
		return ret
	}
	return *o.DueDay
}

// GetDueDayOk returns a tuple with the DueDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PolicyProductPaymentConfiguration) GetDueDayOk() (*int32, bool) {
	if o == nil || IsNil(o.DueDay) {
		return nil, false
	}
	return o.DueDay, true
}

// HasDueDay returns a boolean if a field has been set.
func (o *PolicyProductPaymentConfiguration) HasDueDay() bool {
	if o != nil && !IsNil(o.DueDay) {
		return true
	}

	return false
}

// SetDueDay gets a reference to the given int32 and assigns it to the DueDay field.
// Deprecated
func (o *PolicyProductPaymentConfiguration) SetDueDay(v int32) {
	o.DueDay = &v
}

// GetMinPaymentCalculation returns the MinPaymentCalculation field value
func (o *PolicyProductPaymentConfiguration) GetMinPaymentCalculation() PolicyProductMinPaymentCalculation {
	if o == nil {
		var ret PolicyProductMinPaymentCalculation
		return ret
	}

	return o.MinPaymentCalculation
}

// GetMinPaymentCalculationOk returns a tuple with the MinPaymentCalculation field value
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetMinPaymentCalculationOk() (*PolicyProductMinPaymentCalculation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinPaymentCalculation, true
}

// SetMinPaymentCalculation sets field value
func (o *PolicyProductPaymentConfiguration) SetMinPaymentCalculation(v PolicyProductMinPaymentCalculation) {
	o.MinPaymentCalculation = v
}

// GetPaymentDueInterval returns the PaymentDueInterval field value if set, zero value otherwise.
func (o *PolicyProductPaymentConfiguration) GetPaymentDueInterval() int32 {
	if o == nil || IsNil(o.PaymentDueInterval) {
		var ret int32
		return ret
	}
	return *o.PaymentDueInterval
}

// GetPaymentDueIntervalOk returns a tuple with the PaymentDueInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductPaymentConfiguration) GetPaymentDueIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentDueInterval) {
		return nil, false
	}
	return o.PaymentDueInterval, true
}

// HasPaymentDueInterval returns a boolean if a field has been set.
func (o *PolicyProductPaymentConfiguration) HasPaymentDueInterval() bool {
	if o != nil && !IsNil(o.PaymentDueInterval) {
		return true
	}

	return false
}

// SetPaymentDueInterval gets a reference to the given int32 and assigns it to the PaymentDueInterval field.
func (o *PolicyProductPaymentConfiguration) SetPaymentDueInterval(v int32) {
	o.PaymentDueInterval = &v
}

func (o PolicyProductPaymentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyProductPaymentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allocation_order"] = o.AllocationOrder
	toSerialize["billing_cycle_day"] = o.BillingCycleDay
	if !IsNil(o.BillingCycleDayStrategy) {
		toSerialize["billing_cycle_day_strategy"] = o.BillingCycleDayStrategy
	}
	if !IsNil(o.BillingCycleFrequency) {
		toSerialize["billing_cycle_frequency"] = o.BillingCycleFrequency
	}
	if !IsNil(o.DueDay) {
		toSerialize["due_day"] = o.DueDay
	}
	toSerialize["min_payment_calculation"] = o.MinPaymentCalculation
	if !IsNil(o.PaymentDueInterval) {
		toSerialize["payment_due_interval"] = o.PaymentDueInterval
	}
	return toSerialize, nil
}

func (o *PolicyProductPaymentConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allocation_order",
		"billing_cycle_day",
		"min_payment_calculation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyProductPaymentConfiguration := _PolicyProductPaymentConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyProductPaymentConfiguration)

	if err != nil {
		return err
	}

	*o = PolicyProductPaymentConfiguration(varPolicyProductPaymentConfiguration)

	return err
}

type NullablePolicyProductPaymentConfiguration struct {
	value *PolicyProductPaymentConfiguration
	isSet bool
}

func (v NullablePolicyProductPaymentConfiguration) Get() *PolicyProductPaymentConfiguration {
	return v.value
}

func (v *NullablePolicyProductPaymentConfiguration) Set(val *PolicyProductPaymentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyProductPaymentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyProductPaymentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyProductPaymentConfiguration(val *PolicyProductPaymentConfiguration) *NullablePolicyProductPaymentConfiguration {
	return &NullablePolicyProductPaymentConfiguration{value: val, isSet: true}
}

func (v NullablePolicyProductPaymentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyProductPaymentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


