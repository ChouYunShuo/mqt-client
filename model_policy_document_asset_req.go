/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PolicyDocumentAssetReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyDocumentAssetReq{}

// PolicyDocumentAssetReq Request details for a specific asset.
type PolicyDocumentAssetReq struct {
	// Unique identifier of the asset, which is a type of document that contains finalized values. The values are finalized when the bundle containing the document is created.
	AssetToken string `json:"asset_token" validate:"regexp=(?!^ +$)^.+$"`
}

type _PolicyDocumentAssetReq PolicyDocumentAssetReq

// NewPolicyDocumentAssetReq instantiates a new PolicyDocumentAssetReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyDocumentAssetReq(assetToken string) *PolicyDocumentAssetReq {
	this := PolicyDocumentAssetReq{}
	this.AssetToken = assetToken
	return &this
}

// NewPolicyDocumentAssetReqWithDefaults instantiates a new PolicyDocumentAssetReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyDocumentAssetReqWithDefaults() *PolicyDocumentAssetReq {
	this := PolicyDocumentAssetReq{}
	return &this
}

// GetAssetToken returns the AssetToken field value
func (o *PolicyDocumentAssetReq) GetAssetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetToken
}

// GetAssetTokenOk returns a tuple with the AssetToken field value
// and a boolean to check if the value has been set.
func (o *PolicyDocumentAssetReq) GetAssetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetToken, true
}

// SetAssetToken sets field value
func (o *PolicyDocumentAssetReq) SetAssetToken(v string) {
	o.AssetToken = v
}

func (o PolicyDocumentAssetReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyDocumentAssetReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asset_token"] = o.AssetToken
	return toSerialize, nil
}

func (o *PolicyDocumentAssetReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"asset_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyDocumentAssetReq := _PolicyDocumentAssetReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicyDocumentAssetReq)

	if err != nil {
		return err
	}

	*o = PolicyDocumentAssetReq(varPolicyDocumentAssetReq)

	return err
}

type NullablePolicyDocumentAssetReq struct {
	value *PolicyDocumentAssetReq
	isSet bool
}

func (v NullablePolicyDocumentAssetReq) Get() *PolicyDocumentAssetReq {
	return v.value
}

func (v *NullablePolicyDocumentAssetReq) Set(val *PolicyDocumentAssetReq) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyDocumentAssetReq) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyDocumentAssetReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyDocumentAssetReq(val *PolicyDocumentAssetReq) *NullablePolicyDocumentAssetReq {
	return &NullablePolicyDocumentAssetReq{value: val, isSet: true}
}

func (v NullablePolicyDocumentAssetReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyDocumentAssetReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


