/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AprScheduleCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AprScheduleCreateReq{}

// AprScheduleCreateReq struct for AprScheduleCreateReq
type AprScheduleCreateReq struct {
	// Contains one or more `schedule` objects, which contain information on the annual percentage rates (APRs) associated with the type of balance on the credit account and when they are effective.
	Schedule []AprScheduleEntryCreateReq `json:"schedule"`
	Type AccountAprType `json:"type"`
}

type _AprScheduleCreateReq AprScheduleCreateReq

// NewAprScheduleCreateReq instantiates a new AprScheduleCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAprScheduleCreateReq(schedule []AprScheduleEntryCreateReq, type_ AccountAprType) *AprScheduleCreateReq {
	this := AprScheduleCreateReq{}
	this.Schedule = schedule
	this.Type = type_
	return &this
}

// NewAprScheduleCreateReqWithDefaults instantiates a new AprScheduleCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAprScheduleCreateReqWithDefaults() *AprScheduleCreateReq {
	this := AprScheduleCreateReq{}
	return &this
}

// GetSchedule returns the Schedule field value
func (o *AprScheduleCreateReq) GetSchedule() []AprScheduleEntryCreateReq {
	if o == nil {
		var ret []AprScheduleEntryCreateReq
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *AprScheduleCreateReq) GetScheduleOk() ([]AprScheduleEntryCreateReq, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule, true
}

// SetSchedule sets field value
func (o *AprScheduleCreateReq) SetSchedule(v []AprScheduleEntryCreateReq) {
	o.Schedule = v
}

// GetType returns the Type field value
func (o *AprScheduleCreateReq) GetType() AccountAprType {
	if o == nil {
		var ret AccountAprType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AprScheduleCreateReq) GetTypeOk() (*AccountAprType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AprScheduleCreateReq) SetType(v AccountAprType) {
	o.Type = v
}

func (o AprScheduleCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AprScheduleCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schedule"] = o.Schedule
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *AprScheduleCreateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"schedule",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAprScheduleCreateReq := _AprScheduleCreateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAprScheduleCreateReq)

	if err != nil {
		return err
	}

	*o = AprScheduleCreateReq(varAprScheduleCreateReq)

	return err
}

type NullableAprScheduleCreateReq struct {
	value *AprScheduleCreateReq
	isSet bool
}

func (v NullableAprScheduleCreateReq) Get() *AprScheduleCreateReq {
	return v.value
}

func (v *NullableAprScheduleCreateReq) Set(val *AprScheduleCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAprScheduleCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAprScheduleCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAprScheduleCreateReq(val *AprScheduleCreateReq) *NullableAprScheduleCreateReq {
	return &NullableAprScheduleCreateReq{value: val, isSet: true}
}

func (v NullableAprScheduleCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAprScheduleCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


