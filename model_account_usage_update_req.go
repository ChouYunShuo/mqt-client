/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountUsageUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountUsageUpdateReq{}

// AccountUsageUpdateReq Contains information on how a credit account is used and what types of balances are permitted on the account.
type AccountUsageUpdateReq struct {
	// Contains one or more annual percentage rates (APRs) associated with the credit account.
	Aprs []AprScheduleUpdateReq `json:"aprs,omitempty"`
	Type BalanceType `json:"type"`
}

type _AccountUsageUpdateReq AccountUsageUpdateReq

// NewAccountUsageUpdateReq instantiates a new AccountUsageUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUsageUpdateReq(type_ BalanceType) *AccountUsageUpdateReq {
	this := AccountUsageUpdateReq{}
	this.Type = type_
	return &this
}

// NewAccountUsageUpdateReqWithDefaults instantiates a new AccountUsageUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUsageUpdateReqWithDefaults() *AccountUsageUpdateReq {
	this := AccountUsageUpdateReq{}
	return &this
}

// GetAprs returns the Aprs field value if set, zero value otherwise.
func (o *AccountUsageUpdateReq) GetAprs() []AprScheduleUpdateReq {
	if o == nil || IsNil(o.Aprs) {
		var ret []AprScheduleUpdateReq
		return ret
	}
	return o.Aprs
}

// GetAprsOk returns a tuple with the Aprs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUsageUpdateReq) GetAprsOk() ([]AprScheduleUpdateReq, bool) {
	if o == nil || IsNil(o.Aprs) {
		return nil, false
	}
	return o.Aprs, true
}

// HasAprs returns a boolean if a field has been set.
func (o *AccountUsageUpdateReq) HasAprs() bool {
	if o != nil && !IsNil(o.Aprs) {
		return true
	}

	return false
}

// SetAprs gets a reference to the given []AprScheduleUpdateReq and assigns it to the Aprs field.
func (o *AccountUsageUpdateReq) SetAprs(v []AprScheduleUpdateReq) {
	o.Aprs = v
}

// GetType returns the Type field value
func (o *AccountUsageUpdateReq) GetType() BalanceType {
	if o == nil {
		var ret BalanceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountUsageUpdateReq) GetTypeOk() (*BalanceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountUsageUpdateReq) SetType(v BalanceType) {
	o.Type = v
}

func (o AccountUsageUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountUsageUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aprs) {
		toSerialize["aprs"] = o.Aprs
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *AccountUsageUpdateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountUsageUpdateReq := _AccountUsageUpdateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountUsageUpdateReq)

	if err != nil {
		return err
	}

	*o = AccountUsageUpdateReq(varAccountUsageUpdateReq)

	return err
}

type NullableAccountUsageUpdateReq struct {
	value *AccountUsageUpdateReq
	isSet bool
}

func (v NullableAccountUsageUpdateReq) Get() *AccountUsageUpdateReq {
	return v.value
}

func (v *NullableAccountUsageUpdateReq) Set(val *AccountUsageUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUsageUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUsageUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUsageUpdateReq(val *AccountUsageUpdateReq) *NullableAccountUsageUpdateReq {
	return &NullableAccountUsageUpdateReq{value: val, isSet: true}
}

func (v NullableAccountUsageUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUsageUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


