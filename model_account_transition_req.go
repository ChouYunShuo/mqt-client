/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountTransitionReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountTransitionReq{}

// AccountTransitionReq Information on the credit account transition.
type AccountTransitionReq struct {
	Status AccountStatusEnum `json:"status"`
	// Unique identifier of the credit account transition.
	Token *string `json:"token,omitempty"`
}

type _AccountTransitionReq AccountTransitionReq

// NewAccountTransitionReq instantiates a new AccountTransitionReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTransitionReq(status AccountStatusEnum) *AccountTransitionReq {
	this := AccountTransitionReq{}
	this.Status = status
	return &this
}

// NewAccountTransitionReqWithDefaults instantiates a new AccountTransitionReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTransitionReqWithDefaults() *AccountTransitionReq {
	this := AccountTransitionReq{}
	return &this
}

// GetStatus returns the Status field value
func (o *AccountTransitionReq) GetStatus() AccountStatusEnum {
	if o == nil {
		var ret AccountStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccountTransitionReq) GetStatusOk() (*AccountStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccountTransitionReq) SetStatus(v AccountStatusEnum) {
	o.Status = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AccountTransitionReq) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountTransitionReq) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AccountTransitionReq) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AccountTransitionReq) SetToken(v string) {
	o.Token = &v
}

func (o AccountTransitionReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountTransitionReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

func (o *AccountTransitionReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountTransitionReq := _AccountTransitionReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountTransitionReq)

	if err != nil {
		return err
	}

	*o = AccountTransitionReq(varAccountTransitionReq)

	return err
}

type NullableAccountTransitionReq struct {
	value *AccountTransitionReq
	isSet bool
}

func (v NullableAccountTransitionReq) Get() *AccountTransitionReq {
	return v.value
}

func (v *NullableAccountTransitionReq) Set(val *AccountTransitionReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTransitionReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTransitionReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTransitionReq(val *AccountTransitionReq) *NullableAccountTransitionReq {
	return &NullableAccountTransitionReq{value: val, isSet: true}
}

func (v NullableAccountTransitionReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTransitionReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


