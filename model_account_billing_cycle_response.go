/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AccountBillingCycleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountBillingCycleResponse{}

// AccountBillingCycleResponse Details of a billing cycle.
type AccountBillingCycleResponse struct {
	// Token of the associated account.
	AccountToken *string `json:"account_token,omitempty"`
	// Date and time when the Billing Cycle was created on Marqeta's credit platform
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// End time of the current billing cycle.
	CurrentEndTime *time.Time `json:"current_end_time,omitempty"`
	// Payment due date for the current billing cycle.
	CurrentPaymentDueDate *time.Time `json:"current_payment_due_date,omitempty"`
	// Start time of the current billing cycle.
	CurrentStartTime *time.Time `json:"current_start_time,omitempty"`
	// End time of the next billing cycle.
	NextEndTime *time.Time `json:"next_end_time,omitempty"`
	// Payment due date for the next billing cycle.
	NextPaymentDueDate *time.Time `json:"next_payment_due_date,omitempty"`
	// Start time of the next billing cycle.
	NextStartTime *time.Time `json:"next_start_time,omitempty"`
	// Unique identifier of the billing cycle's short code.
	ShortCode *string `json:"short_code,omitempty"`
	// Date and time when the BillingCycle was last updated on Marqeta's credit platform
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
}

// NewAccountBillingCycleResponse instantiates a new AccountBillingCycleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountBillingCycleResponse() *AccountBillingCycleResponse {
	this := AccountBillingCycleResponse{}
	return &this
}

// NewAccountBillingCycleResponseWithDefaults instantiates a new AccountBillingCycleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountBillingCycleResponseWithDefaults() *AccountBillingCycleResponse {
	this := AccountBillingCycleResponse{}
	return &this
}

// GetAccountToken returns the AccountToken field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetAccountToken() string {
	if o == nil || IsNil(o.AccountToken) {
		var ret string
		return ret
	}
	return *o.AccountToken
}

// GetAccountTokenOk returns a tuple with the AccountToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetAccountTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccountToken) {
		return nil, false
	}
	return o.AccountToken, true
}

// HasAccountToken returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasAccountToken() bool {
	if o != nil && !IsNil(o.AccountToken) {
		return true
	}

	return false
}

// SetAccountToken gets a reference to the given string and assigns it to the AccountToken field.
func (o *AccountBillingCycleResponse) SetAccountToken(v string) {
	o.AccountToken = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *AccountBillingCycleResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCurrentEndTime returns the CurrentEndTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetCurrentEndTime() time.Time {
	if o == nil || IsNil(o.CurrentEndTime) {
		var ret time.Time
		return ret
	}
	return *o.CurrentEndTime
}

// GetCurrentEndTimeOk returns a tuple with the CurrentEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetCurrentEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CurrentEndTime) {
		return nil, false
	}
	return o.CurrentEndTime, true
}

// HasCurrentEndTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasCurrentEndTime() bool {
	if o != nil && !IsNil(o.CurrentEndTime) {
		return true
	}

	return false
}

// SetCurrentEndTime gets a reference to the given time.Time and assigns it to the CurrentEndTime field.
func (o *AccountBillingCycleResponse) SetCurrentEndTime(v time.Time) {
	o.CurrentEndTime = &v
}

// GetCurrentPaymentDueDate returns the CurrentPaymentDueDate field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetCurrentPaymentDueDate() time.Time {
	if o == nil || IsNil(o.CurrentPaymentDueDate) {
		var ret time.Time
		return ret
	}
	return *o.CurrentPaymentDueDate
}

// GetCurrentPaymentDueDateOk returns a tuple with the CurrentPaymentDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetCurrentPaymentDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CurrentPaymentDueDate) {
		return nil, false
	}
	return o.CurrentPaymentDueDate, true
}

// HasCurrentPaymentDueDate returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasCurrentPaymentDueDate() bool {
	if o != nil && !IsNil(o.CurrentPaymentDueDate) {
		return true
	}

	return false
}

// SetCurrentPaymentDueDate gets a reference to the given time.Time and assigns it to the CurrentPaymentDueDate field.
func (o *AccountBillingCycleResponse) SetCurrentPaymentDueDate(v time.Time) {
	o.CurrentPaymentDueDate = &v
}

// GetCurrentStartTime returns the CurrentStartTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetCurrentStartTime() time.Time {
	if o == nil || IsNil(o.CurrentStartTime) {
		var ret time.Time
		return ret
	}
	return *o.CurrentStartTime
}

// GetCurrentStartTimeOk returns a tuple with the CurrentStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetCurrentStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CurrentStartTime) {
		return nil, false
	}
	return o.CurrentStartTime, true
}

// HasCurrentStartTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasCurrentStartTime() bool {
	if o != nil && !IsNil(o.CurrentStartTime) {
		return true
	}

	return false
}

// SetCurrentStartTime gets a reference to the given time.Time and assigns it to the CurrentStartTime field.
func (o *AccountBillingCycleResponse) SetCurrentStartTime(v time.Time) {
	o.CurrentStartTime = &v
}

// GetNextEndTime returns the NextEndTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetNextEndTime() time.Time {
	if o == nil || IsNil(o.NextEndTime) {
		var ret time.Time
		return ret
	}
	return *o.NextEndTime
}

// GetNextEndTimeOk returns a tuple with the NextEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetNextEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextEndTime) {
		return nil, false
	}
	return o.NextEndTime, true
}

// HasNextEndTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasNextEndTime() bool {
	if o != nil && !IsNil(o.NextEndTime) {
		return true
	}

	return false
}

// SetNextEndTime gets a reference to the given time.Time and assigns it to the NextEndTime field.
func (o *AccountBillingCycleResponse) SetNextEndTime(v time.Time) {
	o.NextEndTime = &v
}

// GetNextPaymentDueDate returns the NextPaymentDueDate field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetNextPaymentDueDate() time.Time {
	if o == nil || IsNil(o.NextPaymentDueDate) {
		var ret time.Time
		return ret
	}
	return *o.NextPaymentDueDate
}

// GetNextPaymentDueDateOk returns a tuple with the NextPaymentDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetNextPaymentDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextPaymentDueDate) {
		return nil, false
	}
	return o.NextPaymentDueDate, true
}

// HasNextPaymentDueDate returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasNextPaymentDueDate() bool {
	if o != nil && !IsNil(o.NextPaymentDueDate) {
		return true
	}

	return false
}

// SetNextPaymentDueDate gets a reference to the given time.Time and assigns it to the NextPaymentDueDate field.
func (o *AccountBillingCycleResponse) SetNextPaymentDueDate(v time.Time) {
	o.NextPaymentDueDate = &v
}

// GetNextStartTime returns the NextStartTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetNextStartTime() time.Time {
	if o == nil || IsNil(o.NextStartTime) {
		var ret time.Time
		return ret
	}
	return *o.NextStartTime
}

// GetNextStartTimeOk returns a tuple with the NextStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetNextStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextStartTime) {
		return nil, false
	}
	return o.NextStartTime, true
}

// HasNextStartTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasNextStartTime() bool {
	if o != nil && !IsNil(o.NextStartTime) {
		return true
	}

	return false
}

// SetNextStartTime gets a reference to the given time.Time and assigns it to the NextStartTime field.
func (o *AccountBillingCycleResponse) SetNextStartTime(v time.Time) {
	o.NextStartTime = &v
}

// GetShortCode returns the ShortCode field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetShortCode() string {
	if o == nil || IsNil(o.ShortCode) {
		var ret string
		return ret
	}
	return *o.ShortCode
}

// GetShortCodeOk returns a tuple with the ShortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetShortCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ShortCode) {
		return nil, false
	}
	return o.ShortCode, true
}

// HasShortCode returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasShortCode() bool {
	if o != nil && !IsNil(o.ShortCode) {
		return true
	}

	return false
}

// SetShortCode gets a reference to the given string and assigns it to the ShortCode field.
func (o *AccountBillingCycleResponse) SetShortCode(v string) {
	o.ShortCode = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *AccountBillingCycleResponse) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountBillingCycleResponse) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *AccountBillingCycleResponse) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *AccountBillingCycleResponse) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o AccountBillingCycleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountBillingCycleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountToken) {
		toSerialize["account_token"] = o.AccountToken
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.CurrentEndTime) {
		toSerialize["current_end_time"] = o.CurrentEndTime
	}
	if !IsNil(o.CurrentPaymentDueDate) {
		toSerialize["current_payment_due_date"] = o.CurrentPaymentDueDate
	}
	if !IsNil(o.CurrentStartTime) {
		toSerialize["current_start_time"] = o.CurrentStartTime
	}
	if !IsNil(o.NextEndTime) {
		toSerialize["next_end_time"] = o.NextEndTime
	}
	if !IsNil(o.NextPaymentDueDate) {
		toSerialize["next_payment_due_date"] = o.NextPaymentDueDate
	}
	if !IsNil(o.NextStartTime) {
		toSerialize["next_start_time"] = o.NextStartTime
	}
	if !IsNil(o.ShortCode) {
		toSerialize["short_code"] = o.ShortCode
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableAccountBillingCycleResponse struct {
	value *AccountBillingCycleResponse
	isSet bool
}

func (v NullableAccountBillingCycleResponse) Get() *AccountBillingCycleResponse {
	return v.value
}

func (v *NullableAccountBillingCycleResponse) Set(val *AccountBillingCycleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountBillingCycleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountBillingCycleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountBillingCycleResponse(val *AccountBillingCycleResponse) *NullableAccountBillingCycleResponse {
	return &NullableAccountBillingCycleResponse{value: val, isSet: true}
}

func (v NullableAccountBillingCycleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountBillingCycleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


