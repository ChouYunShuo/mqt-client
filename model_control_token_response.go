/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ControlTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlTokenResponse{}

// ControlTokenResponse struct for ControlTokenResponse
type ControlTokenResponse struct {
	// Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint. This value cannot be updated.
	ControlToken string `json:"control_token"`
}

type _ControlTokenResponse ControlTokenResponse

// NewControlTokenResponse instantiates a new ControlTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlTokenResponse(controlToken string) *ControlTokenResponse {
	this := ControlTokenResponse{}
	this.ControlToken = controlToken
	return &this
}

// NewControlTokenResponseWithDefaults instantiates a new ControlTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlTokenResponseWithDefaults() *ControlTokenResponse {
	this := ControlTokenResponse{}
	return &this
}

// GetControlToken returns the ControlToken field value
func (o *ControlTokenResponse) GetControlToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ControlToken
}

// GetControlTokenOk returns a tuple with the ControlToken field value
// and a boolean to check if the value has been set.
func (o *ControlTokenResponse) GetControlTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ControlToken, true
}

// SetControlToken sets field value
func (o *ControlTokenResponse) SetControlToken(v string) {
	o.ControlToken = v
}

func (o ControlTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["control_token"] = o.ControlToken
	return toSerialize, nil
}

func (o *ControlTokenResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"control_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varControlTokenResponse := _ControlTokenResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varControlTokenResponse)

	if err != nil {
		return err
	}

	*o = ControlTokenResponse(varControlTokenResponse)

	return err
}

type NullableControlTokenResponse struct {
	value *ControlTokenResponse
	isSet bool
}

func (v NullableControlTokenResponse) Get() *ControlTokenResponse {
	return v.value
}

func (v *NullableControlTokenResponse) Set(val *ControlTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableControlTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableControlTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlTokenResponse(val *ControlTokenResponse) *NullableControlTokenResponse {
	return &NullableControlTokenResponse{value: val, isSet: true}
}

func (v NullableControlTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


