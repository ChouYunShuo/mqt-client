/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RewardEntriesJournalEntriesPageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RewardEntriesJournalEntriesPageResponse{}

// RewardEntriesJournalEntriesPageResponse struct for RewardEntriesJournalEntriesPageResponse
type RewardEntriesJournalEntriesPageResponse struct {
	// The number of resources to retrieve.  This field is returned if there are resources in your returned array.
	Count int32 `json:"count"`
	// An array of redacted reward entry objects.
	Data []RewardEntriesJournalEntriesResponse `json:"data"`
	// Sort order index of the last resource in the returned array.
	EndIndex int64 `json:"end_index"`
	// A value of `true` indicates that more unreturned resources exist.
	IsMore *bool `json:"is_more,omitempty"`
	// Sort order index of the first resource in the returned array.
	StartIndex int64 `json:"start_index"`
}

type _RewardEntriesJournalEntriesPageResponse RewardEntriesJournalEntriesPageResponse

// NewRewardEntriesJournalEntriesPageResponse instantiates a new RewardEntriesJournalEntriesPageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRewardEntriesJournalEntriesPageResponse(count int32, data []RewardEntriesJournalEntriesResponse, endIndex int64, startIndex int64) *RewardEntriesJournalEntriesPageResponse {
	this := RewardEntriesJournalEntriesPageResponse{}
	this.Count = count
	this.Data = data
	this.EndIndex = endIndex
	this.StartIndex = startIndex
	return &this
}

// NewRewardEntriesJournalEntriesPageResponseWithDefaults instantiates a new RewardEntriesJournalEntriesPageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRewardEntriesJournalEntriesPageResponseWithDefaults() *RewardEntriesJournalEntriesPageResponse {
	this := RewardEntriesJournalEntriesPageResponse{}
	return &this
}

// GetCount returns the Count field value
func (o *RewardEntriesJournalEntriesPageResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *RewardEntriesJournalEntriesPageResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *RewardEntriesJournalEntriesPageResponse) SetCount(v int32) {
	o.Count = v
}

// GetData returns the Data field value
func (o *RewardEntriesJournalEntriesPageResponse) GetData() []RewardEntriesJournalEntriesResponse {
	if o == nil {
		var ret []RewardEntriesJournalEntriesResponse
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RewardEntriesJournalEntriesPageResponse) GetDataOk() ([]RewardEntriesJournalEntriesResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *RewardEntriesJournalEntriesPageResponse) SetData(v []RewardEntriesJournalEntriesResponse) {
	o.Data = v
}

// GetEndIndex returns the EndIndex field value
func (o *RewardEntriesJournalEntriesPageResponse) GetEndIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EndIndex
}

// GetEndIndexOk returns a tuple with the EndIndex field value
// and a boolean to check if the value has been set.
func (o *RewardEntriesJournalEntriesPageResponse) GetEndIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndIndex, true
}

// SetEndIndex sets field value
func (o *RewardEntriesJournalEntriesPageResponse) SetEndIndex(v int64) {
	o.EndIndex = v
}

// GetIsMore returns the IsMore field value if set, zero value otherwise.
func (o *RewardEntriesJournalEntriesPageResponse) GetIsMore() bool {
	if o == nil || IsNil(o.IsMore) {
		var ret bool
		return ret
	}
	return *o.IsMore
}

// GetIsMoreOk returns a tuple with the IsMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardEntriesJournalEntriesPageResponse) GetIsMoreOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMore) {
		return nil, false
	}
	return o.IsMore, true
}

// HasIsMore returns a boolean if a field has been set.
func (o *RewardEntriesJournalEntriesPageResponse) HasIsMore() bool {
	if o != nil && !IsNil(o.IsMore) {
		return true
	}

	return false
}

// SetIsMore gets a reference to the given bool and assigns it to the IsMore field.
func (o *RewardEntriesJournalEntriesPageResponse) SetIsMore(v bool) {
	o.IsMore = &v
}

// GetStartIndex returns the StartIndex field value
func (o *RewardEntriesJournalEntriesPageResponse) GetStartIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StartIndex
}

// GetStartIndexOk returns a tuple with the StartIndex field value
// and a boolean to check if the value has been set.
func (o *RewardEntriesJournalEntriesPageResponse) GetStartIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartIndex, true
}

// SetStartIndex sets field value
func (o *RewardEntriesJournalEntriesPageResponse) SetStartIndex(v int64) {
	o.StartIndex = v
}

func (o RewardEntriesJournalEntriesPageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RewardEntriesJournalEntriesPageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	toSerialize["data"] = o.Data
	toSerialize["end_index"] = o.EndIndex
	if !IsNil(o.IsMore) {
		toSerialize["is_more"] = o.IsMore
	}
	toSerialize["start_index"] = o.StartIndex
	return toSerialize, nil
}

func (o *RewardEntriesJournalEntriesPageResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
		"data",
		"end_index",
		"start_index",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRewardEntriesJournalEntriesPageResponse := _RewardEntriesJournalEntriesPageResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRewardEntriesJournalEntriesPageResponse)

	if err != nil {
		return err
	}

	*o = RewardEntriesJournalEntriesPageResponse(varRewardEntriesJournalEntriesPageResponse)

	return err
}

type NullableRewardEntriesJournalEntriesPageResponse struct {
	value *RewardEntriesJournalEntriesPageResponse
	isSet bool
}

func (v NullableRewardEntriesJournalEntriesPageResponse) Get() *RewardEntriesJournalEntriesPageResponse {
	return v.value
}

func (v *NullableRewardEntriesJournalEntriesPageResponse) Set(val *RewardEntriesJournalEntriesPageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRewardEntriesJournalEntriesPageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRewardEntriesJournalEntriesPageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRewardEntriesJournalEntriesPageResponse(val *RewardEntriesJournalEntriesPageResponse) *NullableRewardEntriesJournalEntriesPageResponse {
	return &NullableRewardEntriesJournalEntriesPageResponse{value: val, isSet: true}
}

func (v NullableRewardEntriesJournalEntriesPageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRewardEntriesJournalEntriesPageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


