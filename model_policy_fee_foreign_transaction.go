/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PolicyFeeForeignTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyFeeForeignTransaction{}

// PolicyFeeForeignTransaction Contains information on a specific fee in a fee policy.
type PolicyFeeForeignTransaction struct {
	// Method used to calculate the fee value.
	DefaultMethod *string `json:"default_method,omitempty"`
	// Percentage value for the foreign transaction fee.
	DefaultValue *decimal.Decimal `json:"default_value,omitempty"`
}

// NewPolicyFeeForeignTransaction instantiates a new PolicyFeeForeignTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyFeeForeignTransaction() *PolicyFeeForeignTransaction {
	this := PolicyFeeForeignTransaction{}
	return &this
}

// NewPolicyFeeForeignTransactionWithDefaults instantiates a new PolicyFeeForeignTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyFeeForeignTransactionWithDefaults() *PolicyFeeForeignTransaction {
	this := PolicyFeeForeignTransaction{}
	return &this
}

// GetDefaultMethod returns the DefaultMethod field value if set, zero value otherwise.
func (o *PolicyFeeForeignTransaction) GetDefaultMethod() string {
	if o == nil || IsNil(o.DefaultMethod) {
		var ret string
		return ret
	}
	return *o.DefaultMethod
}

// GetDefaultMethodOk returns a tuple with the DefaultMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyFeeForeignTransaction) GetDefaultMethodOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultMethod) {
		return nil, false
	}
	return o.DefaultMethod, true
}

// HasDefaultMethod returns a boolean if a field has been set.
func (o *PolicyFeeForeignTransaction) HasDefaultMethod() bool {
	if o != nil && !IsNil(o.DefaultMethod) {
		return true
	}

	return false
}

// SetDefaultMethod gets a reference to the given string and assigns it to the DefaultMethod field.
func (o *PolicyFeeForeignTransaction) SetDefaultMethod(v string) {
	o.DefaultMethod = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *PolicyFeeForeignTransaction) GetDefaultValue() decimal.Decimal {
	if o == nil || IsNil(o.DefaultValue) {
		var ret decimal.Decimal
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyFeeForeignTransaction) GetDefaultValueOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *PolicyFeeForeignTransaction) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given decimal.Decimal and assigns it to the DefaultValue field.
func (o *PolicyFeeForeignTransaction) SetDefaultValue(v decimal.Decimal) {
	o.DefaultValue = &v
}

func (o PolicyFeeForeignTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyFeeForeignTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultMethod) {
		toSerialize["default_method"] = o.DefaultMethod
	}
	if !IsNil(o.DefaultValue) {
		toSerialize["default_value"] = o.DefaultValue
	}
	return toSerialize, nil
}

type NullablePolicyFeeForeignTransaction struct {
	value *PolicyFeeForeignTransaction
	isSet bool
}

func (v NullablePolicyFeeForeignTransaction) Get() *PolicyFeeForeignTransaction {
	return v.value
}

func (v *NullablePolicyFeeForeignTransaction) Set(val *PolicyFeeForeignTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyFeeForeignTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyFeeForeignTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyFeeForeignTransaction(val *PolicyFeeForeignTransaction) *NullablePolicyFeeForeignTransaction {
	return &NullablePolicyFeeForeignTransaction{value: val, isSet: true}
}

func (v NullablePolicyFeeForeignTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyFeeForeignTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


