/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JitAccountNameVerification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JitAccountNameVerification{}

// JitAccountNameVerification Contains account name verification data used to make JIT Funding decisions from one of the following objects:  * The `gateway` object contains account name verification data from your JIT Funding gateway. * The `issuer` object contains account name verification data from the Marqeta platform. * The `request` object contains account name verification data as it appears in a JIT Funding request.
type JitAccountNameVerification struct {
	Gateway *AccountNameVerificationSource `json:"gateway,omitempty"`
	Issuer *AccountNameVerificationSource `json:"issuer,omitempty"`
	Request *AniInformation1 `json:"request,omitempty"`
}

// NewJitAccountNameVerification instantiates a new JitAccountNameVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJitAccountNameVerification() *JitAccountNameVerification {
	this := JitAccountNameVerification{}
	return &this
}

// NewJitAccountNameVerificationWithDefaults instantiates a new JitAccountNameVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJitAccountNameVerificationWithDefaults() *JitAccountNameVerification {
	this := JitAccountNameVerification{}
	return &this
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *JitAccountNameVerification) GetGateway() AccountNameVerificationSource {
	if o == nil || IsNil(o.Gateway) {
		var ret AccountNameVerificationSource
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitAccountNameVerification) GetGatewayOk() (*AccountNameVerificationSource, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *JitAccountNameVerification) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given AccountNameVerificationSource and assigns it to the Gateway field.
func (o *JitAccountNameVerification) SetGateway(v AccountNameVerificationSource) {
	o.Gateway = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *JitAccountNameVerification) GetIssuer() AccountNameVerificationSource {
	if o == nil || IsNil(o.Issuer) {
		var ret AccountNameVerificationSource
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitAccountNameVerification) GetIssuerOk() (*AccountNameVerificationSource, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *JitAccountNameVerification) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given AccountNameVerificationSource and assigns it to the Issuer field.
func (o *JitAccountNameVerification) SetIssuer(v AccountNameVerificationSource) {
	o.Issuer = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *JitAccountNameVerification) GetRequest() AniInformation1 {
	if o == nil || IsNil(o.Request) {
		var ret AniInformation1
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitAccountNameVerification) GetRequestOk() (*AniInformation1, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *JitAccountNameVerification) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given AniInformation1 and assigns it to the Request field.
func (o *JitAccountNameVerification) SetRequest(v AniInformation1) {
	o.Request = &v
}

func (o JitAccountNameVerification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JitAccountNameVerification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	return toSerialize, nil
}

type NullableJitAccountNameVerification struct {
	value *JitAccountNameVerification
	isSet bool
}

func (v NullableJitAccountNameVerification) Get() *JitAccountNameVerification {
	return v.value
}

func (v *NullableJitAccountNameVerification) Set(val *JitAccountNameVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableJitAccountNameVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableJitAccountNameVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJitAccountNameVerification(val *JitAccountNameVerification) *NullableJitAccountNameVerification {
	return &NullableJitAccountNameVerification{value: val, isSet: true}
}

func (v NullableJitAccountNameVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJitAccountNameVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


