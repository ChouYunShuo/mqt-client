/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the RedemptionsBalanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RedemptionsBalanceResponse{}

// RedemptionsBalanceResponse struct for RedemptionsBalanceResponse
type RedemptionsBalanceResponse struct {
	// The ending date (or date-time) of a date range from which to return the redemption balance, in UTC.
	EndDate time.Time `json:"end_date"`
	// Total amount of rewards redeemed within a specified date range.
	RedemptionTotalAmount decimal.Decimal `json:"redemption_total_amount"`
	// Unique identifier of the reward program for which to return the redemption balance.
	RewardProgramToken string `json:"reward_program_token"`
	// The starting date (or date-time) of a date range from which to return the redemption balance, in UTC.
	StartDate time.Time `json:"start_date"`
}

type _RedemptionsBalanceResponse RedemptionsBalanceResponse

// NewRedemptionsBalanceResponse instantiates a new RedemptionsBalanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedemptionsBalanceResponse(endDate time.Time, redemptionTotalAmount decimal.Decimal, rewardProgramToken string, startDate time.Time) *RedemptionsBalanceResponse {
	this := RedemptionsBalanceResponse{}
	this.EndDate = endDate
	this.RedemptionTotalAmount = redemptionTotalAmount
	this.RewardProgramToken = rewardProgramToken
	this.StartDate = startDate
	return &this
}

// NewRedemptionsBalanceResponseWithDefaults instantiates a new RedemptionsBalanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedemptionsBalanceResponseWithDefaults() *RedemptionsBalanceResponse {
	this := RedemptionsBalanceResponse{}
	return &this
}

// GetEndDate returns the EndDate field value
func (o *RedemptionsBalanceResponse) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *RedemptionsBalanceResponse) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *RedemptionsBalanceResponse) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetRedemptionTotalAmount returns the RedemptionTotalAmount field value
func (o *RedemptionsBalanceResponse) GetRedemptionTotalAmount() decimal.Decimal {
	if o == nil {
		var ret decimal.Decimal
		return ret
	}

	return o.RedemptionTotalAmount
}

// GetRedemptionTotalAmountOk returns a tuple with the RedemptionTotalAmount field value
// and a boolean to check if the value has been set.
func (o *RedemptionsBalanceResponse) GetRedemptionTotalAmountOk() (*decimal.Decimal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedemptionTotalAmount, true
}

// SetRedemptionTotalAmount sets field value
func (o *RedemptionsBalanceResponse) SetRedemptionTotalAmount(v decimal.Decimal) {
	o.RedemptionTotalAmount = v
}

// GetRewardProgramToken returns the RewardProgramToken field value
func (o *RedemptionsBalanceResponse) GetRewardProgramToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RewardProgramToken
}

// GetRewardProgramTokenOk returns a tuple with the RewardProgramToken field value
// and a boolean to check if the value has been set.
func (o *RedemptionsBalanceResponse) GetRewardProgramTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardProgramToken, true
}

// SetRewardProgramToken sets field value
func (o *RedemptionsBalanceResponse) SetRewardProgramToken(v string) {
	o.RewardProgramToken = v
}

// GetStartDate returns the StartDate field value
func (o *RedemptionsBalanceResponse) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *RedemptionsBalanceResponse) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *RedemptionsBalanceResponse) SetStartDate(v time.Time) {
	o.StartDate = v
}

func (o RedemptionsBalanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RedemptionsBalanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["end_date"] = o.EndDate
	toSerialize["redemption_total_amount"] = o.RedemptionTotalAmount
	toSerialize["reward_program_token"] = o.RewardProgramToken
	toSerialize["start_date"] = o.StartDate
	return toSerialize, nil
}

func (o *RedemptionsBalanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"end_date",
		"redemption_total_amount",
		"reward_program_token",
		"start_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRedemptionsBalanceResponse := _RedemptionsBalanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRedemptionsBalanceResponse)

	if err != nil {
		return err
	}

	*o = RedemptionsBalanceResponse(varRedemptionsBalanceResponse)

	return err
}

type NullableRedemptionsBalanceResponse struct {
	value *RedemptionsBalanceResponse
	isSet bool
}

func (v NullableRedemptionsBalanceResponse) Get() *RedemptionsBalanceResponse {
	return v.value
}

func (v *NullableRedemptionsBalanceResponse) Set(val *RedemptionsBalanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRedemptionsBalanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRedemptionsBalanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedemptionsBalanceResponse(val *RedemptionsBalanceResponse) *NullableRedemptionsBalanceResponse {
	return &NullableRedemptionsBalanceResponse{value: val, isSet: true}
}

func (v NullableRedemptionsBalanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedemptionsBalanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


